-> to run the image : docker run hello-world
-> docker ps 
-> docker ps -a
-> docker images
->docker rm 2b43903f3f2d
->docker rmi d211f485f2dd
-> docker create hello-world (note: hello-world is the image name)
-> docker search hello-world 
-> docker pull hello-world
-> docker start 7db0
-> docker stop 7db0bad4c4ef
->docker pause 7db0bad4c4ef
-> user will communicate with docker through docker client.
-> Docker has volumes,images,container,network
->daemon is respossible to run the all the command which was send by the user.
-> Jdk->Jre->Jvm
-> Jshell
-> docker run -it openjdk:24-jdk-bullseye
->/exit exit from jshell
-> java -jar target/docker-demo.jar to run the jar file
->docker exec dreamy_greider ls -a or /tmp
->docker cp  target/docker-demo.jar dreamy_greider:/tmp
->docker commit dreamy_greider akhil/docker-demo:v1
  ->docker run akhil/docker-demo:v1
->docker commit --change='CMD java -jar /tmp/docker-demo.jar' dreamy_greider akhil/docker-demo:v2
->docker run akhil/docker-demo:v2
->docker run -p 8080:8080  akhil/docker-demo:v2

-> in Docker file
FROM openjdk:24-jdk-bullseye
ADD target/docker-demo.jar docker-demo.jar
ENTRYPOINT ["java","-jar","/docker-demo.jar"]





